// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  firebaseId String
  name       String
  // phoneNumber String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  userAddress UserAddress[]
  // userPayment UserPayment[]
  Review      Review[]
}

model UserAddress {
  id           Int     @id @default(autoincrement())
  userId       Int
  addressLine1 String
  addressLine2 String?
  city         String
  postalCode   String?
  country      String
  phoneNumber  String

  user User @relation(fields: [userId], references: [id])
}

// model UserPayment {
//   id          Int    @id @default(autoincrement())
//   userId      Int
//   paymentType String
//   provider    String
//   user        User   @relation(fields: [userId], references: [id])
// }

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Decimal
  imageUrl    String
  discountId  Int
  categoryId  Int
  quantity    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt()
  sizes       Size[]
  colors      String[]
  // Rate

  reviews Review[]

  category ProductCategory @relation(fields: [categoryId], references: [id])
  discount Discount        @relation(fields: [discountId], references: [id])
  // inventoryId Int      @unique
  // inventory ProductInventory @relation(fields: [inventoryId], references: [id])
}

model ProductCategory {
  id        Int      @id @default(autoincrement())
  name      String
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  product Product[]
}

// model ProductInventory {
//   id        Int      @id @default(autoincrement())
//   quantity  Int
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt()

//   product Product?
// }

model Discount {
  id              Int       @id @default(autoincrement())
  discountPercent Decimal
  active          Boolean
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt()
  product         Product[]
}

model Review {
  id        Int     @id @default(autoincrement())
  userId    Int
  productId Int
  content   String
  rate      Int
  Product   Product @relation(fields: [productId], references: [id])
  User      User    @relation(fields: [userId], references: [id])
}

enum Size {
  SMALL
  MEDIUM
  L
  XL
  XXL
  XXXL
}
